<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello  on Sachin Bharadwaj</title>
    <link>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/</link>
    <description>Recent content in Hello  on Sachin Bharadwaj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Classifying Pneumothorax</title>
      <link>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/post/project-3/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/post/project-3/</guid>
      <description>Build classifier on highly imbalanced dataset from Kaggle Competition. Goal is to classify Pneumothorax. Random Forest achieves ~70% AUC score without any tuning. Resnet18 based CNN classifier achieves ~0.8 AUC in just about 10 epochs. Used stratified sampling. GradCAM is used to visualize where the network is paying attention.  HeatMap overlayed on top of input images Link to GitHub repository</description>
    </item>
    
    <item>
      <title>RL: Dueling Double DQN</title>
      <link>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/post/project-2/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/post/project-2/</guid>
      <description>Trained a deep RL agent to play Super Mario Bros. Dueling DQN architecture used. Agent learning using Prioritized memory replay.  Start of Training Trained Agent playing Super Mario Last 100 episodes average reward distribution, snapshot taken every 50 episodes As you can observe as training proceeds, the reward distribution tail becomes thicker indicating that agent is able to reach goal more often
Link to GitHub repository
Trained Agent playing Pong Link to GitHub repository</description>
    </item>
    
    <item>
      <title>Image Colorization</title>
      <link>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/post/project-1/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/post/project-1/</guid>
      <description>AutoEncoder using Resnet18 encoder architecture and convolutional transpose decoder. Dataset is prepared by scrapping internet for colored images. Input images convert to LAB color space and L channel fed as input. A and B channels are used as targets.  Left: Gray scale image as input, Middle: Ground Truth, Right: Prediction
Training set Validation set Link to GitHub repository</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Sachin-Bharadwaj.github.io/Sachin-Portfolio/contact/</guid>
      <description>Follow me on these social media platforms.
   Platform URL     LinkedIn: https://www.linkedin.com/in/sachin-bharadwaj-3518881/   GitHub: https://github.com/Sachin-Bharadwaj   Twitter: https://twitter.com/SachinB79085652   Medium: https://medium.com/@sachin.bharadwaj    </description>
    </item>
    
  </channel>
</rss>